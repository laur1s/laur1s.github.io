<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on DevOps For Humans</title><link>https://laur1s.github.io/posts/</link><description>Recent content in Posts on DevOps For Humans</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 23 May 2021 21:51:56 +0300</lastBuildDate><atom:link href="https://laur1s.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Modifying AWS Cloudfront response headers with Cloudfront functions</title><link>https://laur1s.github.io/posts/cloudfront-functions/</link><pubDate>Sun, 23 May 2021 21:51:56 +0300</pubDate><guid>https://laur1s.github.io/posts/cloudfront-functions/</guid><description>Adding custom HTTP response headers to cloudfront is quite a common task. E.g.: Your website might need a Content-Security-Policy header.
Doing this task in Cloudfront was not easy. You needed to setup a Lambda@Edge function that intercepts response requests and adds the required headers. It's not that difficult to setup Lambda@Edge but using Lambda functions to add a simple HTTP header to a response feels like a bit of overkill. I even wrote about this when the Cloudfront team asked for suggestions: https://t.</description></item><item><title>Introduction to .dockerignore</title><link>https://laur1s.github.io/posts/introduction-to-dockerignore/</link><pubDate>Tue, 20 Apr 2021 09:45:17 +0300</pubDate><guid>https://laur1s.github.io/posts/introduction-to-dockerignore/</guid><description>.dockerignore is a special file where you can specify files and folders that will be excluded from the docker context. What it means is that these files won't be added to your container image after using ADD or COPY commands. For more information about the .dockerignore please refer to the docker documentation.
For example for Node.js application my .dockerignore file might look something like this:
# .dockerignore# ignore git.git/.gitignore# ignore teststest/# local node modules and debug lognode_modules/npm-debug.</description></item><item><title>First Post: why starting a technical blog is hard</title><link>https://laur1s.github.io/posts/first-post/</link><pubDate>Mon, 19 Apr 2021 14:39:38 +0300</pubDate><guid>https://laur1s.github.io/posts/first-post/</guid><description>As a devops engineer I work with various tools and technologies everyday. Some of them I use everyday or almost everyday (AWS, Terraform, Git , Docker, etc. ) and some only rarely. If you need to use use something you only used a month or two ago chances are you will have to spend some time getting familiar with the tool again. This is where notes come very useful. If you have some notes about what you figured out when using the tool last time it would be much easier to figure out and remember what you did last time.</description></item></channel></rss>