<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DevOps For Humans</title><link>https://laur1s.github.io/</link><description>Recent content on DevOps For Humans</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 20 Apr 2021 09:45:17 +0300</lastBuildDate><atom:link href="https://laur1s.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://laur1s.github.io/about/</link><pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate><guid>https://laur1s.github.io/about/</guid><description>Hi my name is Laurynas. I work as a Devops Engineer. In this blog I will try to document my work with various technologies as well as well as provide a friendly introduction to them.
Feel free to add or DM me on Twitter Twitter if you have any questions or comments.</description></item><item><title>Multiple Docker Ignore Files in Repo</title><link>https://laur1s.github.io/posts/multiple-docker-ignore-files-in-repo/</link><pubDate>Tue, 20 Apr 2021 09:45:17 +0300</pubDate><guid>https://laur1s.github.io/posts/multiple-docker-ignore-files-in-repo/</guid><description>What is a .dockerignore file .dockerignore can be used to specify the files and folders that will be excluded from the docker context(and therefore won't be added to your container image after using ADD or COPY commands) For more information about the .dockerignore please refer to the docker documentation.
For example for Node.js application my .dockerignore file might look something like this:
# .dockerignore# ignore git.git/.gitignore# ignore teststest/# local node modules and debug lognode_modules/npm-debug.</description></item><item><title>First Post: why starting a technical blog is hard</title><link>https://laur1s.github.io/posts/first-post/</link><pubDate>Mon, 19 Apr 2021 14:39:38 +0300</pubDate><guid>https://laur1s.github.io/posts/first-post/</guid><description>Why start a technical blog? As a devops engineer I work with various tools and technologies everyday. Some of them I use everyday or almost everyday (AWS, Terraform, Git , Docker, etc. ) and some only rarely. If you need to use use something you only used a month or two ago chances are you will have to spend some time getting familiar with the tool again. This is where notes come very useful.</description></item></channel></rss>